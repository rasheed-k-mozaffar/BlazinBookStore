<div style="@BackgroundStyle" class="card " @attributes="UserAttributes">
    <h3>@Book?.Title</h3>
    <p>Author: @Book?.AuthorName</p>
    <p>Publishing Date: @Book?.PublishingDate.ToShortDateString()</p>
    @if (WithButton)
    {
        <button class="main-button" @onclick="AddToCart">Add to Cart</button>
    }
</div>

@code{
    [Parameter, EditorRequired] public Book? Book { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? UserAttributes { get; set; }
    [Parameter] public bool WithButton { get; set; } = true;
    // this means that the book card can accept a function that returns void or Task,
    // and accepts a parameter of type Book?
    [Parameter] public EventCallback<Book> OnAddToCartClicked { get; set; }
    [CascadingParameter]
    public string? BackgroundStyle { get; set; }
    private void AddToCart()
    {
        OnAddToCartClicked.InvokeAsync(Book);
    }
}